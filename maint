provider "aws" {
  region = "us-east-1"
}

resource "aws_cognito_user_pool" "example" {
  name = "example-user-pool"

  password_policy {
    minimum_length    = 8
    require_lowercase = true
    require_numbers   = true
    require_symbols   = true
    require_uppercase = true
  }

  schema {
    attribute_data_type  = "String"
    developer_only_attribute = false
    mutable              = true
    name                 = "email"
    required             = true
  }

  auto_verified_attributes = ["email"]
}


resource "aws_cognito_user_pool_client" "example" {
  name                        = "example-client"
  user_pool_id                = aws_cognito_user_pool.example.id
  generate_secret             = true
  allowed_oauth_flows         = ["code"]
  allowed_oauth_scopes        = ["openid"]
  callback_urls               = ["http://example.com/callback"]
  allowed_oauth_flows_user_pool_client = true
  explicit_auth_flows         = ["ALLOW_REFRESH_TOKEN_AUTH"]

  supported_identity_providers = ["COGNITO"]

  app_type                    = "OTHER"
  token_validity_units        = "hours"
  token_validity              = 24

  tags = {
    Environment = "Production"
  }

resource "aws_cognito_user_pool_user" "example" {
  count       = 2
  user_pool_id = aws_cognito_user_pool.example.id
  username = "user${count.index+1}"
  desired_delivery_mediums = ["EMAIL"]
  force_alias_creation    = true

  message_action = "SUPPRESS"

  password {
    temporary = false
    value     = "Password123!"
  }

  attribute {
    name  = "email"
    value = "user${count.index+1}@example.com"
  }
}